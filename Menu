#include <M5EPD.h>

M5EPD_Canvas canvas(&M5.EPD);

const int NUM_OPTIONS = 3;
const char *options[NUM_OPTIONS] = {"BT", "manuel", "Musique"};
const int optionX = 200;
const int optionY[NUM_OPTIONS] = {200, 400, 600};
const int optionWidth = 140;
const int optionHeight = 60;

void drawMenu() {
    canvas.fillCanvas(0);
    canvas.setTextSize(3);
    for (int i = 0; i < NUM_OPTIONS; i++) {
        canvas.drawString(options[i], optionX, optionY[i]);
        canvas.drawRect(optionX - 10, optionY[i] - 10, optionWidth + 20, optionHeight + 20, 15);
    }
    canvas.pushCanvas(0, 0, UPDATE_MODE_DU4);
}

void setup() {
    M5.begin();
    M5.EPD.SetRotation(90);
    M5.TP.SetRotation(90);
    M5.EPD.Clear(true);
    canvas.createCanvas(540, 960);
    drawMenu();
}

void loop() {
    if (M5.TP.available()) {
        if (!M5.TP.isFingerUp()) {
            M5.TP.update();
            for (int i = 0; i < 2; i++) {
                tp_finger_t FingerItem = M5.TP.readFinger(i);
                int touchX = FingerItem.x;
                int touchY = FingerItem.y;
                for (int j = 0; j < NUM_OPTIONS; j++) {
                    if (touchX >= optionX && touchX <= optionX + optionWidth &&
                        touchY >= optionY[j] && touchY <= optionY[j] + optionHeight) {
                        // Action correspondant à l'option j
                        Serial.printf("Option sélectionnée: %s\n", options[j]);
                        // Ajoutez ici le code pour exécuter l'action correspondant à l'option sélectionnée
                    }
                }
            }
        }
    }
}
